{"data":{"meta":{"identifier":"framework/responsivity","href":"/docs/framework/responsivity","title":"Responsivity","btime":0,"mtime":1624706534701.6038,"sections":[{"identifier":"responsivity","level":1,"text":"Responsivity"},{"identifier":"viewports","level":2,"text":"Viewports"},{"identifier":"syntax","level":2,"text":"Syntax"}],"snippets":[{"identifier":"responsivity-syntax","script":"&lt;script&gt;\n    import {Box, Grid} from \"@kahi-ui/framework\";\n&lt;/script&gt;\n\n&lt;Grid.Container\n    class=\"responsivity-syntax\"\n    points={[\"5\", \"mobile:2\", \"tablet:3\", \"desktop:4\"]}\n    spacing=\"medium\"\n&gt;\n    &lt;Box palette=\"alert\" /&gt;\n    &lt;Box palette=\"affirmative\" /&gt;\n    &lt;Box palette=\"negative\" /&gt;\n\n    &lt;Box palette=\"affirmative\" /&gt;\n    &lt;Box palette=\"negative\" /&gt;\n    &lt;Box palette=\"alert\" /&gt;\n\n    &lt;Box palette=\"alert\" /&gt;\n    &lt;Box palette=\"affirmative\" /&gt;\n    &lt;Box palette=\"negative\" /&gt;\n\n    &lt;Box palette=\"negative\" /&gt;\n    &lt;Box palette=\"alert\" /&gt;\n    &lt;Box palette=\"affirmative\" /&gt;\n\n    &lt;Box palette=\"affirmative\" /&gt;\n    &lt;Box palette=\"negative\" /&gt;\n    &lt;Box palette=\"alert\" /&gt;\n\n    &lt;Box palette=\"negative\" /&gt;\n    &lt;Box palette=\"alert\" /&gt;\n    &lt;Box palette=\"affirmative\" /&gt;\n\n    &lt;Box palette=\"alert\" /&gt;\n    &lt;Box palette=\"affirmative\" /&gt;\n    &lt;Box palette=\"negative\" /&gt;\n&lt;/Grid.Container&gt;\n\n&lt;style&gt;\n    :global(.responsivity-syntax .box) {\n        height: 3rem;\n    }\n&lt;/style&gt;","syntax":"svelte","title":"Responsivity Syntax"}]},"render":"<h1 id=\"responsivity\">Responsivity</h1>\n<p>Kahi UI supports responsive design out of the box for the majority of its Components. Such as <a href=\"../layouts/grid\">Grid</a>, where you can define how many items are displayed at each Viewport.</p>\n<h2 id=\"viewports\">Viewports</h2>\n<p>As mentioned above, Kahi UI has the concept of four pre-defined breakpoints that are known as Viewports. Which are only active whenever the Browser window's width is within two sizes.</p>\n<div class=\"scrollable\"><table>\n<thead>\n<tr>\n<th>Viewport</th>\n<th>Minimum</th>\n<th>Maximum</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mobile</td>\n<td><code>0px</code></td>\n<td><code>640px</code></td>\n</tr>\n<tr>\n<td>tablet</td>\n<td><code>641px</code></td>\n<td><code>768px</code></td>\n</tr>\n<tr>\n<td>desktop</td>\n<td><code>769px</code></td>\n<td><code>1024px</code></td>\n</tr>\n<tr>\n<td>widescreen</td>\n<td><code>1025px</code></td>\n<td><code>âˆž</code></td>\n</tr>\n</tbody>\n</table>\n</div><h2 id=\"syntax\">Syntax</h2>\n<p>To be able to use Viewport-specific values, you just need to prefix your values with <code>{VIEWPORT}:</code>, e.g. <code>&lt;Grid points=&quot;mobile:3&quot;&gt;</code>. But then you can't specify default values or other Viewport-specifics. For that you need to pass an array in like below.</p>\n<blockquote data-palette=\"accent\">\n<p><strong>NOTE</strong>: The REPL currently does not support viewport values. Resize your Browser instead.</p>\n</blockquote>\n<iframe class=\"snippet-repl\" data-document=framework/responsivity data-identifier=\"responsivity-syntax\" src=\"/repl/framework/responsivity/responsivity-syntax?rotation=horizontal\" loading=\"lazy\"></iframe>\n    <a href=\"/repl/framework/responsivity/responsivity-syntax?rotation=horizontal\" hidden sveltekit:prefetch></a>"}}